Timsort is a sorting algorithm which combines insertion sort- which iterates over a list and to find smallest number and placing it at the start of the list, and merge sort- which divides the list into n sublist each containing 1 element and then repeatedly compares elements and merges them to form a single sorted list. Timsort iterates over the list to find pre-existing runs of consecutive ordered element, which are either non-descending or strictly descending. If the run found is descending it is blindly reversed. After finding a naturally occurring run, it applies merge sort to sort that sublist. For merge sort to be effective a minrun has to be defined. For an efficient program minrun has to be such that: -
No. of elements in the list / minrun  equals to or slightly less than a power of 2. Minrun is usually chosen from the range from 32-64.
